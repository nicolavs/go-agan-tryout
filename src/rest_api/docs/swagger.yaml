basePath: /api/v1
definitions:
  model.CreateUser:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  model.LoginInput:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  model.ResponseHTTP:
    properties:
      count:
        type: integer
      data:
        type: object
      message:
        type: string
      status:
        type: string
    type: object
  model.Role:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  model.User:
    properties:
      email:
        type: string
      id:
        type: integer
      username:
        type: string
    type: object
info:
  contact: {}
  description: This is an API for Agan Tryout Application
  title: Agan Tryout App
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Get jwt token
      parameters:
      - description: Login Input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/model.ResponseHTTP'
            - properties:
                data:
                  type: string
              type: object
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.ResponseHTTP'
      summary: Get jwt token
      tags:
      - Auth
  /user:
    get:
      consumes:
      - application/json
      description: Get all users
      parameters:
      - description: Offset
        in: query
        name: skip
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/model.ResponseHTTP'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.User'
                  type: array
              type: object
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.ResponseHTTP'
      security:
      - ApiKeyAuth: []
      summary: Get all users
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Create new user
      parameters:
      - description: user
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.CreateUser'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/model.ResponseHTTP'
            - properties:
                data:
                  $ref: '#/definitions/model.CreateUser'
              type: object
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.ResponseHTTP'
      security:
      - ApiKeyAuth: []
      summary: Create new user
      tags:
      - User
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
